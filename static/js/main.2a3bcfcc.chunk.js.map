{"version":3,"sources":["intialData.js","task.jsx","coloumn.jsx","index.js"],"names":["intialData","tasks","task1","id","content","task2","task3","task4","task5","task6","task7","columns","column1","title","taskIds","column2","column3","columnOrder","Container","styled","div","_templateObject","props","isDragDisabled","Task","_this","this","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","task","index","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","isDragging","React","Component","coloumn_templateObject","Title","h3","_templateObject2","TaskList","_templateObject3","isDraggingOver","Coloumn","coloumn_Container","coloumn","droppableId","isDropDisabled","droppableProps","map","task_Task","placeholder","src_templateObject","App","state","onDragStart","start","homeIndex","indexOf","source","setState","onDragEnd","result","_objectSpread3","document","body","style","color","destination","finish","startTaskIds","Array","from","finishTaskIds","splice","newStart","objectSpread","newFinish","newState","defineProperty","newTaskIds","newColoumn","_this2","src_Container","coloumnId","colomn","taskId","key","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.2a3bcfcc.chunk.js","sourcesContent":["const intialData = {\n    tasks:{\n        'task1': {id: 'task1' , content : 'Get Up'},\n        'task2': {id: 'task2' , content : 'Get Ready'},\n        'task3': {id: 'task3' , content : 'Breackfast'},\n        'task4': {id: 'task4' , content : 'Go to Work'},\n        'task5': {id: 'task5' , content : 'Lunch'},\n        'task6': {id: 'task6' , content : 'Dinner'},\n        'task7': {id: 'task7' , content : 'Sleep'},\n    },\n    columns:{\n        'column1':{\n            id:'column1',\n            title: 'To Do List',\n            taskIds:['task5','task6','task7'],\n        },\n        'column2':{\n            id:'column2',\n            title: 'In Progress',\n            taskIds:['task4']\n        },\n        'column3':{\n            id:'column3',\n            title: 'Done',\n            taskIds:['task1','task2','task3'],\n        },\n    },\n    \n    columnOrder:['column1','column2','column3'],\n    \n    \n    };\n    export default intialData;","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\nborder: 1px solid lightgrey;\nborder-radius: 4px;\npadding : 8px;\nmargin-bottom: 8px;\nbackground: ${ (props) => (props.isDragDisabled) ? '#7FB3D5' : '#D6EAF8'};\ndisplay : flex;\n`;\n\nexport default class Task extends React.Component{\n    render(){\n\n        return(\n        <Draggable \n        draggableId={this.props.task.id} \n        index={this.props.index}\n        >\n    {(provided,snapshot)=>(\n        <Container\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref = {provided.innerRef}\n        isDragging={snapshot.isDragging}\n        >            \n            {this.props.task.content}\n        </Container>\n        )}\n    </Draggable>\n    )}\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Task from './task';\nimport {Droppable} from 'react-beautiful-dnd';\nconst Container = styled.div`\nmargin: 8px;\nwidth: 300px;\nborder: 1px solid skyblue;\nborder-radius: 2px;\ndisplay : flex;\nflex-direction : column;\n`;\n\nconst Title = styled.h3`\npadding :8px;\n`;\nconst TaskList = styled.div`\npadding : 8px;\nbackground-color: ${props =>  props.isDraggingOver \n                                    ? '#D4EFDF' \n                                    :'white'};\nmin-hight: 100px;\nflex-grow: 1;\n`;\n\nclass Coloumn extends React.Component{\n    render(){\n        return(\n        <Container>\n            <Title>{this.props.coloumn.title}</Title>\n            <Droppable \n            droppableId={this.props.coloumn.id}\n            isDropDisabled={this.props.isDropDisabled}\n            >\n                {(provided,snapshot)=>(\n                <TaskList\n                ref={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}\n                {...provided.droppableProps}>                \n                  {this.props.tasks.map((task,index)=> \n                     <Task id={task.id} task={task} index={index}/>\n                    )}\n                  {provided.placeholder}\n                </TaskList>\n                )}\n            </Droppable>\n        </Container>\n        )};\n\n}\nexport default Coloumn;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport intialData from './intialData';\nimport Coloumn from './coloumn'\nimport '@atlaskit/css-reset';\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst Container= styled.div`\ndisplay: flex`;\nclass App extends React.Component {\n    state = intialData;\n    onDragStart = start =>{\n        const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId)\n\n        this.setState({\n            homeIndex,\n        });\n    }\n    onDragEnd = result =>{\n        this.setState({\n            homeIndex: null,\n        });\n            document.body.style.color= 'inherit';\n            const { destination, source, draggableId} = result;\n            if(!destination)\n                return;\n            if(\n                destination.droppableId===source.droppableId &&\n                destination.index===source.index\n            ){\n                return;\n            }\n            \n            const start =this.state.columns[source.droppableId];\n            const finish =this.state.columns[destination.droppableId];\n\n            if(start=== finish){\n                    const newTaskIds= Array.from(start.taskIds);\n                    //console.log(newTaskIds);\n                    newTaskIds.splice(source.index,1);\n                    newTaskIds.splice(destination.index,0,draggableId);\n\n\n                    const newColoumn = {\n                        ...start,\n                        taskIds:newTaskIds\n                    };\n                    const newState = {\n                        ...this.state,\n                        columns: {\n                            ...this.state.columns,\n                            [newColoumn.id]:newColoumn,   \n                        }\n                    };\n                    \n                    this.setState(newState);\n                    return;\n                }\n\n                const startTaskIds= Array.from(start.taskIds);\n                const finishTaskIds = Array.from(finish.taskIds);\n                \n                startTaskIds.splice(source.index,1);\n                finishTaskIds.splice(destination.index,0,draggableId);\n               \n                const newStart={\n                    ...start,\n                    taskIds: startTaskIds,\n                };\n                const newFinish={\n                    ...finish,\n                    taskIds: finishTaskIds,\n                };\n                //console.log(newStart);\n                //console.log(newFinish);\n                const newState = {\n                    ...this.state,\n                    columns: {\n                        ...this.state.columns,\n                        [newStart.id]:newStart,\n                        [newFinish.id]:newFinish,  \n                    }\n                };\n                //console.log(newState);\n                this.setState(newState);\n    }\n    \n   \n\n    render(){\n        return (\n        <Container>\n\n        <DragDropContext \n        onDragEnd={this.onDragEnd}\n        onDragStart={this.onDragStart}\n        >\n            {\n            this.state.columnOrder.map((coloumnId,index) => {\n            const colomn = this.state.columns[coloumnId];\n            const task = colomn.taskIds.map(taskId=>this.state.tasks[taskId]);\n            \n            const isDropDisabled = index< this.state.homeIndex;\n            //console.log(this.state.columns.id);\n            //console.log(isDropDisabled);\n\n            return <Coloumn key=\"{colomn.id}\" coloumn={colomn} tasks={task} isDropDisabled={isDropDisabled}/>\n        })}\n        </DragDropContext>\n        </Container>        \n        );\n    }\n}\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}